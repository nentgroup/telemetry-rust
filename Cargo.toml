[package]
name = "telemetry-rust"
version = "1.0.1"
edition = "2021"
license = "MIT"
description = "Open Telemetry fox Axum and Tracing"

[dependencies]
http = "1.0.0"
opentelemetry = { version = "0.21.0", default-features = false, features = [
  "trace",
] }
tracing-opentelemetry = "0.22"
opentelemetry-http = "0.10.0"
opentelemetry-otlp = { version = "0.14", optional = true, features = ["http-proto"] }
opentelemetry-zipkin = { version = "0.19", features = [], optional = true }
opentelemetry_sdk = { version = "0.21", default-features = false, features = [
  "rt-tokio",
] }
opentelemetry-semantic-conventions = { version = "0.13", optional = true }
tracing-opentelemetry-instrumentation-sdk = { version = "0.16.0", features = ["http"], optional = true }
tracing = { version = "0.1.40", default-features = false }
tracing-subscriber = { version = "0.3.18", default-features = false, features = [
  "env-filter",
  "fmt",
  "json",
  "ansi"
] }
serde = { version = "1.0.195", features = ["derive"], optional = true }
serde_json = { version = "1.0.111", optional = true }
opentelemetry_api = { version = "0.20.0", features = ["testing"], optional = true }
rand = { version = "0.8.5", optional = true }
tower = { version = "0.4.13", optional = true }
axum = { version = "0.7.4", optional = true }
pin-project-lite = { version = "0.2.13", optional = true }
futures-util = { version = "0.3.30", default_features = false, features = [], optional = true }
hyper = { version = "1.1.0", default-features = false, features = ["http1", "client"], optional = true }
http-body-util = { version = "0.1.0", optional = true }
aws-sdk-dynamodb = { version = "1.7.0", optional = true }
aws-sdk-firehose = { version = "1.7.0", optional = true }
aws-sdk-sns = { version = "1.7.0", optional = true }


[dev-dependencies]
assert2 = "0.3.11"
rstest = "0.18.2"

[features]
full = ["aws", "integration_test"]
default = ["otlp", "zipkin"]
zipkin = ["dep:opentelemetry-zipkin"]
otlp = ["opentelemetry-otlp/http-proto", "tracer", "dep:tracing-opentelemetry-instrumentation-sdk"]
tracer = ["dep:opentelemetry-semantic-conventions"]
integration_test = ["axum", "dep:serde", "dep:serde_json", "dep:opentelemetry_api", "dep:rand", "dep:hyper", "dep:http-body-util"]
axum = ["dep:axum", "dep:tower", "dep:futures-util", "dep:pin-project-lite", "dep:tracing-opentelemetry-instrumentation-sdk"]
aws = ["aws-dynamodb", "aws-firehose", "aws-sns"]
aws-dynamodb = ["dep:aws-sdk-dynamodb"]
aws-firehose = ["dep:aws-sdk-firehose"]
aws-sns = ["dep:aws-sdk-sns"]

[profile.dev]
lto = false
split-debuginfo = "unpacked"
opt-level = 0
overflow-checks = false

[profile.release]
opt-level = 's'
incremental = false
lto = true
# The Rust compiler splits your crate into multiple codegen units to parallelize (and thus speed up) compilation. However, this might cause it to miss some potential optimizations.
codegen-units = 1
