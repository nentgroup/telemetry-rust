[package]
name = "telemetry-rust"
version = "2.0.0"
edition = "2021"
license = "MIT"
description = "Open Telemetry fox Axum and Tracing"

[dependencies]
http = "1.0.0"
opentelemetry = { version = "0.21.0", default-features = false, features = [
  "trace",
] }
tracing-opentelemetry = "0.22"
opentelemetry-http = { version = "0.10.0", features = ["hyper", "tokio"] }
opentelemetry-otlp = { version = "0.14", features = ["http-proto"] }
opentelemetry-zipkin = { version = "0.19", features = [], optional = true }
opentelemetry_sdk = { version = "0.21", default-features = false, features = [
  "rt-tokio",
] }
opentelemetry-semantic-conventions = "0.13"
tracing-opentelemetry-instrumentation-sdk = { version = "0.16.0", features = ["http"] }
tracing = { version = "0.1.40", default-features = false }
tracing-subscriber = { version = "0.3.18", default-features = false, features = [
  "env-filter",
  "fmt",
  "json",
  "ansi"
] }
serde = { version = "1.0.195", features = ["derive"], optional = true }
serde_json = { version = "1.0.111", optional = true }
opentelemetry_api = { version = "0.20.0", features = ["testing"], optional = true }
rand = { version = "0.8.5", optional = true }
tower = { version = "0.4", optional = true }
axum = { version = "0.7.4", optional = true }
pin-project-lite = { version = "0.2", optional = true }
futures-util = { version = "0.3", default_features = false, features = [], optional = true }
hyper = { version = "0.14", default-features = false, features = ["http1", "client"] }
hyper-v1 = { package = "hyper", version = "1.1", default-features = false, features = ["http1", "client"], optional = true }
http-body-util = { version = "0.1.0", optional = true }
aws-types =  { version = "1", optional = true }
async-trait = { version = "0.1.77", optional = true }
paste = { version = "1.0.14", optional = true }

[dev-dependencies]
assert2 = "0.3"
rstest = "0.18"

[features]
full = ["aws", "test"]
default = ["zipkin"]
zipkin = ["dep:opentelemetry-zipkin"]
test = ["axum", "dep:serde", "dep:serde_json", "dep:opentelemetry_api", "dep:rand"]
axum = ["dep:axum", "dep:tower", "dep:futures-util", "dep:pin-project-lite"]
hyper-v1 = ["dep:hyper-v1", "dep:http-body-util"]
aws-span = ["dep:aws-types", "dep:paste"]
aws-instrumentation = ["dep:async-trait", "dep:futures-util"]
aws = ["aws-span", "aws-instrumentation"]

[profile.dev]
lto = false
split-debuginfo = "unpacked"
opt-level = 0
overflow-checks = false

[profile.release]
opt-level = 's'
incremental = false
lto = true
# The Rust compiler splits your crate into multiple codegen units to parallelize (and thus speed up) compilation. However, this might cause it to miss some potential optimizations.
codegen-units = 1
